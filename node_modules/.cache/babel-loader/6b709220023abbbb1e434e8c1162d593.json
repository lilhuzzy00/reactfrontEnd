{"ast":null,"code":"import{API}from\"../config\";import queryString from\"query-string\";export var getProducts=function getProducts(sortBy){return fetch(\"\".concat(API,\"/products?sortBy=\").concat(sortBy,\"&order=desc&limit=4\"),{method:\"GET\"}).then(function(response){return response.json();}).catch(function(error){return console.log(error);});};export var getCategories=function getCategories(){return fetch(\"\".concat(API,\"/categories\"),{method:\"GET\"}).then(function(response){return response.json();}).catch(function(error){console.log(error);});};export var getFilteredProducts=function getFilteredProducts(skip,limit){var filters=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var data={skip:skip,limit:limit,filters:filters};return fetch(\"\".concat(API,\"/products/by/search\"),{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify(data)}).then(function(response){return response.json();}).catch(function(error){console.log(error);});};export var list=function list(params){var query=queryString.stringify(params);console.log(\"query\",query);return fetch(\"\".concat(API,\"/products/search?\").concat(query),{method:\"GET\"}).then(function(response){return response.json();}).catch(function(error){console.log(error);});};export var read=function read(productId){return fetch(\"\".concat(API,\"/product/\").concat(productId),{method:\"GET\"}).then(function(response){return response.json();}).catch(function(error){console.log(error);});};export var listRelated=function listRelated(productId){return fetch(\"\".concat(API,\"/products/related/\").concat(productId),{method:\"GET\"}).then(function(response){return response.json();}).catch(function(error){console.log(error);});};export var braintreeClientToken=function braintreeClientToken(userId,token){return fetch(\"\".concat(API,\"/braintree/getToken/\").concat(userId),{method:\"GET\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)}}).then(function(response){return response.json();}).catch(function(error){console.log(error);});};export var processPayment=function processPayment(userId,token,paymentData){return fetch(\"\".concat(API,\"/braintree/payment/\").concat(userId),{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)},body:JSON.stringify(paymentData)}).then(function(response){return response.json();}).catch(function(error){console.log(error);});};export var createOrder=function createOrder(userId,token,createOrderData){return fetch(\"\".concat(API,\"/order/create/\").concat(userId),{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)},body:JSON.stringify({order:createOrderData})}).then(function(response){return response.json();}).catch(function(error){console.log(error);});};export var productByCategory=function productByCategory(categoryId){console.log(\"category\",categoryId);return fetch(\"\".concat(API,\"/products-by-category/\").concat(categoryId),{method:\"GET\"}).then(function(response){return response.json();}).catch(function(error){console.log(error);});};","map":{"version":3,"sources":["C:/Users/GOD'SPOWER/Desktop/reactfrontEnd/src/core/ApiCore.js"],"names":["API","queryString","getProducts","sortBy","fetch","method","then","response","json","catch","error","console","log","getCategories","getFilteredProducts","skip","limit","filters","data","headers","Accept","body","JSON","stringify","list","params","query","read","productId","listRelated","braintreeClientToken","userId","token","Authorization","processPayment","paymentData","createOrder","createOrderData","order","productByCategory","categoryId"],"mappings":"AAAA,OAAQA,GAAR,KAAkB,WAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CAGA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAAW,CACrC,MAAOC,CAAAA,KAAK,WAAIJ,GAAJ,6BAA2BG,MAA3B,wBAAwD,CACnEE,MAAM,CAAE,KAD2D,CAAxD,CAAL,CAGLC,IAHK,CAGA,SAAAC,QAAQ,CAAG,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACA,CALK,EAMLC,KANK,CAMC,SAAAC,KAAK,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ,EANN,CAAP,CAOA,CARM,CAWP,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAClC,MAAOT,CAAAA,KAAK,WAAIJ,GAAJ,gBAAsB,CACjCK,MAAM,CAAE,KADyB,CAAtB,CAAL,CAGNC,IAHM,CAGD,SAAAC,QAAQ,CAAG,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACC,CALK,EAMLC,KANK,CAMC,SAAAC,KAAK,CAAG,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,CARK,CAAP,CASA,CAVM,CAcP,MAAO,IAAMI,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,IAAD,CAAOC,KAAP,CAA+B,IAAjBC,CAAAA,OAAiB,2DAAP,EAAO,CAC/D,GAAMC,CAAAA,IAAI,CAAG,CACZH,IAAI,CAAJA,IADY,CAEZC,KAAK,CAALA,KAFY,CAGZC,OAAO,CAAPA,OAHY,CAAb,CAMA,MAAOb,CAAAA,KAAK,WAAIJ,GAAJ,wBAA8B,CACzCK,MAAM,CAAE,MADiC,CAEzCc,OAAO,CAAE,CACRC,MAAM,CAAE,kBADA,CAER,eAAgB,kBAFR,CAFgC,CAMzCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CANmC,CAA9B,CAAL,CAQNZ,IARM,CAQD,SAAAC,QAAQ,CAAG,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACA,CAVM,EAWNC,KAXM,CAWA,SAAAC,KAAK,CAAG,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,CAbM,CAAP,CAcA,CArBI,CA4BP,MAAO,IAAMc,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAAAC,MAAM,CAAI,CAC7B,GAAMC,CAAAA,KAAK,CAAGzB,WAAW,CAACsB,SAAZ,CAAsBE,MAAtB,CAAd,CACAd,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBc,KAArB,EACA,MAAOtB,CAAAA,KAAK,WAAIJ,GAAJ,6BAA2B0B,KAA3B,EAAoC,CAC/CrB,MAAM,CAAE,KADuC,CAApC,CAAL,CAGNC,IAHM,CAGD,SAAAC,QAAQ,CAAG,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACC,CALK,EAMLC,KANK,CAMC,SAAAC,KAAK,CAAG,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,CARK,CAAP,CASA,CAZM,CAeP,MAAO,IAAMiB,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,SAAD,CAAe,CAClC,MAAOxB,CAAAA,KAAK,WAAIJ,GAAJ,qBAAmB4B,SAAnB,EAAgC,CAC3CvB,MAAM,CAAE,KADmC,CAAhC,CAAL,CAGNC,IAHM,CAGD,SAAAC,QAAQ,CAAG,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACC,CALK,EAMLC,KANK,CAMC,SAAAC,KAAK,CAAG,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,CARK,CAAP,CASA,CAVM,CAYP,MAAO,IAAMmB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACD,SAAD,CAAe,CACzC,MAAOxB,CAAAA,KAAK,WAAIJ,GAAJ,8BAA4B4B,SAA5B,EAAyC,CACpDvB,MAAM,CAAE,KAD4C,CAAzC,CAAL,CAGNC,IAHM,CAGD,SAAAC,QAAQ,CAAG,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACC,CALK,EAMLC,KANK,CAMC,SAAAC,KAAK,CAAG,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,CARK,CAAP,CASA,CAVM,CAcP,MAAO,IAAMoB,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,MAAD,CAASC,KAAT,CAAmB,CACtD,MAAO5B,CAAAA,KAAK,WAAIJ,GAAJ,gCAA8B+B,MAA9B,EAAwC,CACnD1B,MAAM,CAAE,KAD2C,CAEnDc,OAAO,CAAE,CACRC,MAAM,CAAE,kBADA,CAER,eAAgB,kBAFR,CAGRa,aAAa,kBAAYD,KAAZ,CAHL,CAF0C,CAAxC,CAAL,CAQN1B,IARM,CAQD,SAAAC,QAAQ,CAAG,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACC,CAVK,EAWLC,KAXK,CAWC,SAAAC,KAAK,CAAG,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,CAbK,CAAP,CAcA,CAfM,CAkBP,MAAO,IAAMwB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACH,MAAD,CAASC,KAAT,CAAgBG,WAAhB,CAAgC,CAC7D,MAAO/B,CAAAA,KAAK,WAAIJ,GAAJ,+BAA6B+B,MAA7B,EAAuC,CAClD1B,MAAM,CAAE,MAD0C,CAElDc,OAAO,CAAE,CACRC,MAAM,CAAE,kBADA,CAER,eAAgB,kBAFR,CAGRa,aAAa,kBAAYD,KAAZ,CAHL,CAFyC,CAOlDX,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeY,WAAf,CAP4C,CAAvC,CAAL,CASN7B,IATM,CASD,SAAAC,QAAQ,CAAG,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACC,CAXK,EAYLC,KAZK,CAYC,SAAAC,KAAK,CAAG,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,CAdK,CAAP,CAeA,CAhBM,CAoBP,MAAO,IAAM0B,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACL,MAAD,CAASC,KAAT,CAAgBK,eAAhB,CAAoC,CAC9D,MAAOjC,CAAAA,KAAK,WAAIJ,GAAJ,0BAAwB+B,MAAxB,EAAkC,CAC7C1B,MAAM,CAAE,MADqC,CAE7Cc,OAAO,CAAE,CACRC,MAAM,CAAE,kBADA,CAER,eAAgB,kBAFR,CAGRa,aAAa,kBAAYD,KAAZ,CAHL,CAFoC,CAO7CX,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACe,KAAK,CAAED,eAAR,CAAf,CAPuC,CAAlC,CAAL,CASN/B,IATM,CASD,SAAAC,QAAQ,CAAG,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACC,CAXK,EAYLC,KAZK,CAYC,SAAAC,KAAK,CAAG,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,CAdK,CAAP,CAeA,CAhBM,CAmBP,MAAO,IAAM6B,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,UAAD,CAAgB,CAChD7B,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwB4B,UAAxB,EACA,MAAOpC,CAAAA,KAAK,WAAIJ,GAAJ,kCAAgCwC,UAAhC,EAA8C,CACzDnC,MAAM,CAAE,KADiD,CAA9C,CAAL,CAGNC,IAHM,CAGD,SAAAC,QAAQ,CAAG,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACC,CALK,EAMLC,KANK,CAMC,SAAAC,KAAK,CAAG,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,CARK,CAAP,CASA,CAXM","sourcesContent":["import {API} from \"../config\"\r\nimport queryString from \"query-string\"\r\n\r\n\r\nexport const getProducts = (sortBy) =>{\r\n\treturn fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=4`, {\r\n\t\tmethod: \"GET\"\r\n\t})\r\n\t\t.then(response =>{\r\n\t\t\treturn response.json()\r\n\t\t})\r\n\t\t.catch(error => console.log(error))\r\n}\r\n\r\n\r\nexport const getCategories = () => {\r\n\treturn fetch(`${API}/categories`, {\r\n\t\tmethod: \"GET\"\r\n\t\t})\r\n\t.then(response =>{\r\n\t\treturn response.json()\r\n\t\t})\r\n\t\t.catch(error =>{\r\n\t\t\tconsole.log(error)\r\n\t\t})\r\n}\r\n\r\n\r\n\r\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\r\n\t\t\tconst data = {\r\n\t\t\t\tskip, \r\n\t\t\t\tlimit, \r\n\t\t\t\tfilters\r\n\t\t\t};\r\n\r\n\t\t\treturn fetch(`${API}/products/by/search`, {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(data)\r\n\t\t\t})\r\n\t\t\t.then(response =>{\r\n\t\t\t\treturn response.json()\r\n\t\t\t})\r\n\t\t\t.catch(error =>{\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const list = params => {\r\n\tconst query = queryString.stringify(params)\r\n\tconsole.log(\"query\", query)\r\n\treturn fetch(`${API}/products/search?${query}`, {\r\n\t\tmethod: \"GET\"\r\n\t\t})\r\n\t.then(response =>{\r\n\t\treturn response.json()\r\n\t\t})\r\n\t\t.catch(error =>{\r\n\t\t\tconsole.log(error)\r\n\t\t})\r\n}\r\n\r\n\r\nexport const read = (productId) => {\r\n\treturn fetch(`${API}/product/${productId}`, {\r\n\t\tmethod: \"GET\"\r\n\t\t})\r\n\t.then(response =>{\r\n\t\treturn response.json()\r\n\t\t})\r\n\t\t.catch(error =>{\r\n\t\t\tconsole.log(error)\r\n\t\t})\r\n}\r\n\r\nexport const listRelated = (productId) => {\r\n\treturn fetch(`${API}/products/related/${productId}`, {\r\n\t\tmethod: \"GET\"\r\n\t\t})\r\n\t.then(response =>{\r\n\t\treturn response.json()\r\n\t\t})\r\n\t\t.catch(error =>{\r\n\t\t\tconsole.log(error)\r\n\t\t})\r\n}\r\n\r\n\r\n\r\nexport const braintreeClientToken = (userId, token) => {\r\n\treturn fetch(`${API}/braintree/getToken/${userId}`, {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {\r\n\t\t\tAccept: \"application/json\",\r\n\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t.then(response =>{\r\n\t\treturn response.json()\r\n\t\t})\r\n\t\t.catch(error =>{\r\n\t\t\tconsole.log(error)\r\n\t\t})\r\n}\r\n\r\n\r\nexport const processPayment = (userId, token, paymentData) => {\r\n\treturn fetch(`${API}/braintree/payment/${userId}`, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {\r\n\t\t\tAccept: \"application/json\",\r\n\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify(paymentData)\r\n\t})\r\n\t.then(response =>{\r\n\t\treturn response.json()\r\n\t\t})\r\n\t\t.catch(error =>{\r\n\t\t\tconsole.log(error)\r\n\t\t})\r\n}\r\n\r\n\r\n\r\nexport const createOrder = (userId, token, createOrderData) => {\r\n\treturn fetch(`${API}/order/create/${userId}`, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {\r\n\t\t\tAccept: \"application/json\",\r\n\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({order: createOrderData})\r\n\t})\r\n\t.then(response =>{\r\n\t\treturn response.json()\r\n\t\t})\r\n\t\t.catch(error =>{\r\n\t\t\tconsole.log(error)\r\n\t\t})\r\n}\r\n\r\n\r\nexport const productByCategory = (categoryId) => {\r\n\tconsole.log(\"category\", categoryId)\r\n\treturn fetch(`${API}/products-by-category/${categoryId}`, {\r\n\t\tmethod: \"GET\"\r\n\t})\r\n\t.then(response =>{\r\n\t\treturn response.json()\r\n\t\t})\r\n\t\t.catch(error =>{\r\n\t\t\tconsole.log(error)\r\n\t\t})\r\n}"]},"metadata":{},"sourceType":"module"}